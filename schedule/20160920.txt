# 建立svn项目 svnadmin create /home/svn/testgit
# 参考svn学习设置权限
# 提交readme.txt
# git svn clone svn://10.0.0.21/testgit git检出项目

# 测试svn与git同步
* svn修改文件
* git svn rebase 同步svn代码
# 测试git中修改文件
* git中修改文件
* git add readme.txt
* git commit -m "add line from git"
* install Perl's Term::ReadKey module root执行cpan Term::ReadKey
* git svn dcommit

# 测试git svn同时修改代码
* svn修改readme
* git修改readme
* git svn rebase 提示解决冲突
* 解决冲突后 git add readme.txt
* git rebase --continue
* git svn dcommit 完成冲突解决

# git开发模式

# git分支测试
* git branch test
* git checkout test 切换到test分支
* 修改readme并提交 git commit -a -m 'made other change'
* git checkout master 切换回主分支
* 查看readme
* git branch -va 查看当前分支
* git checkout master 
* git merge test 切换回主分支并merge 分支test的修改
* git branch -d test 删除分支

# git多分支测试
* git checkout -b develope
* 修改readme并提交
* git checkout master
* git checkout -b iss53
* 修改readme并提交
* git checkout master 切换回主分支允许 git merge iss53
* git branch -d iss53 删除分支
* git merge develope 合并开发分支，有冲突编辑冲突文件 git add 后表示解决冲突 git commit
* git checkout develope 切换到开发分支并运行 git merge master

